@startuml

package api {
    package boundary {
        +class Api {
            +api_bf : ApiBf
            +router : apiRouter
            +validator : validator

            +send_mail_added(request : Request) : JSONResponse
            +send_mail_deleted(request : Request) : JSONResponse
            +send_error_mail(request : Request) : JSONResponse
        }

        +class ExceptionHandler {
            +logger : logger

            +register_exception_handler(fast_api : app) : JSONResponse
            +response(detail : str, status_code : int) : JSONResponse
        }
    }

    package control {
        +class ApiBf {
            +__init__() : None
            +prepare_mailing_data(valid_data : Request, action : Action) : None
            +prepare_mailing_data_error(valid_data : Request) : None
        }
    }

    package validation {
        +class Validator {
            +__init__() : None
            +validate_data(product_list : list<dict<str, int | str>>) : list<dict<str, int | str>>
            +validate_error_message(request_data : list<dict<str, int | str>>) : list<dict<str, int | str>>
        }
    }
}

package bm {
    +class MailSendingServiceBa {
        +__init__() : None
        +send_mail(mail_data : object | list<object>, action : Action) : None
        +set_mail_data(mail_data_list : list<MailData>, action : Action) : str, object
        +set_error_mail_data(error_message : str) : str, object
        +config_message(subject : str, body : str) : MIMEMultipart
        +sending_email(message : MIMEMultipart) : None
    }
}

package entity {
    +class MailData {
        +product_id : int
        +product_name : str
        +product_amount_changed : int
        +product_amount_total : int
        +action : Action

        +__init__(product_id : int, product_name : str, product_amount_changed : int, product_amount_total : int, action : action) : None
        +get_product_id() : int
        +get_product_name() : str
        +get_product_amount_changed() : int
        +get_product_amount_total() : int
        +get_action() : Action
    }

    +enum Action {
        ADDED
        DELETED
        ERROR
    }

    +class InternalErrorException {
        +detail : str
        +status_code : int

        +__init__(detail : str = "Internal Server Error", status_code : int = 500) : None
    }

    +class BadRequestException {
        +detail : str
        +status_code : int

        +__init__(detail : str = "Bad Request", status_code : int = 400) : None
    }
}

+class Main {
    +app : fast_api
}

Main ..> ExceptionHandler
Main ..> Api

Api ..> Validator
Api ..> ApiBf
Api ..> Action

ApiBf ..> MailData
ApiBf ..> MailSendingServiceBa
ApiBf ..> InternalErrorException
ApiBf ..> Action

Validator ..> BadRequestException

MailSendingServiceBa ..> Action
MailSendingServiceBa ..> InternalErrorException
MailSendingServiceBa ..> MailData

@enduml
