openapi: 3.0.3

info:
  title: Database-Service API
  description: This is the API-Specification for the Database-Service
  version: 1.0.0

paths:
  /addItem:
    post:
      summary: Add new item
      description: Create a new item in the database, create product when item does not have existing product-type.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockLog'
      responses:
        '2XX':
          description: Succesfully added item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLogResponse'
        '3XX':
          description: Succesfully added item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLogResponse'
        '4XX':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLogResponse'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLogResponse'
  /deleteItem:
    post:
      summary: Mark item as removed
      description: If an item was removed, set SystemOutTime, this marks the item as removed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockLog'
      responses:
        '2XX':
          description: Successfully removed item 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLogResponse'
        '3XX':
          description: Successfully removed item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLogResponse'
        '4XX':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLogResponse'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockLogResponse'
  /getNextId:
    get:
      summary: Return next id
      description: Return the next available id.
      responses:
        '2XX':
          description: Next id was returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNextIdResponse'
        '3XX':
          description: Next id was returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNextIdResponse'
        '4XX':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNextIdResponse'
        '5XX':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNextIdResponse'
    
components:
  schemas:
    StockLog:
      type: object
      required:
        - id
        - classId
        - SystemInTime
        - SystemOutTime
      properties:
        id:
          type: integer
          example: 123
        classId:
          type: integer
          example: 123
        SystemInTime:
          type: object
          example: "DD.MM.YYYY hh:mm:ss"
        SystemOutTime:
          type: object
          example: "DD.MM.YYYY hh:mm:ss"
    StockLogResponse:
      type: object
      required:
        - responseMessage
      properties:
        message:
          type: string # enum 
          example: "Id already exists"
    GetNextIdResponse:
      type: object
      required:
        - nextId
      properties:
        message:
          type: integer
          example: 22